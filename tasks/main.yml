---

  - name: acquire certificate bundle from s3
    become: false
    connection: local
    action: >
      {{'s3' if ansible_version.full is version_compare('2.4', '<') else 'aws_s3' }}
      region='{{ s3_ssl_certs_region }}'
      bucket='{{ s3_ssl_certs_bucket }}'
      aws_access_key='{{ s3_ssl_certs_accesskey }}'
      aws_secret_key='{{ s3_ssl_certs_secretkey }}'
      object='{{ s3_ssl_certs_certbundle }}'
      dest='{{ s3_ssl_certs_tmpdir }}/{{ s3_ssl_certs_certbundle }}'
      mode='get'
      overwrite=yes
    changed_when: false

  - name: load certificate data
    become: false
    connection: local
    include_vars:
      file: "{{ s3_ssl_certs_tmpdir }}/{{ s3_ssl_certs_certbundle }}"
      name: s3_ssl_certs_certdata

  - name: remove certficate data from local machine
    become: false
    connection: local
    file:
      name: "{{ s3_ssl_certs_tmpdir }}/{{ s3_ssl_certs_certbundle }}"
      state: absent
    changed_when: false
    failed_when: false
    # Do not fail because we could already remove that certificate from local host

  - name: check if yml has good common name
    fail:
      msg: "CN is not defined in {{ s3_ssl_certs_certbundle }}"
    when: s3_ssl_certs_certdata.cn is not defined

  - name: check if yml has certificate
    fail:
      msg: "Certificate is not defined in {{ s3_ssl_certs_certbundle }}"
    when: s3_ssl_certs_certdata.certificate is not defined

  - name: check if yml has private key
    fail:
      msg: "Private key is not defined in {{ s3_ssl_certs_certbundle }}"
    when: s3_ssl_certs_certdata.private_key is not defined

  - name: execute pre-install tasks
    command: "{{ s3_ssl_certs_pre_exec }}"
    when: s3_ssl_certs_pre_exec is defined

  - name: install certificate
    copy:
      content: "{{ s3_ssl_certs_certdata.certificate }}"
      dest: "{{ s3_ssl_certs_outputdir }}/{{ s3_ssl_certs_certdata.cn }}.crt"
      owner: "{{ s3_ssl_certs_owner }}"
      group: "{{ s3_ssl_certs_group }}"
      mode: "0644"
    notify: execute post-install tasks

  - name: install private key
    copy:
      content: "{{ s3_ssl_certs_certdata.private_key }}"
      dest: "{{ s3_ssl_certs_outputdir }}/{{ s3_ssl_certs_certdata.cn }}.key"
      owner: "{{ s3_ssl_certs_owner }}"
      group: "{{ s3_ssl_certs_group }}"
      mode: "0600"

  - name: install chain
    copy:
      content: "{{ s3_ssl_certs_certdata.chain }}"
      dest: "{{ s3_ssl_certs_outputdir }}/{{ s3_ssl_certs_certdata.cn }}.chain"
      owner: "{{ s3_ssl_certs_owner }}"
      group: "{{ s3_ssl_certs_group }}"
      mode: "0644"
    when: s3_ssl_certs_certdata.chain is defined

  - name: install full chain
    copy:
      content: "{{ s3_ssl_certs_certdata.full_chain }}"
      dest: "{{ s3_ssl_certs_outputdir }}/{{ s3_ssl_certs_certdata.cn }}.full_chain"
      owner: "{{ s3_ssl_certs_owner }}"
      group: "{{ s3_ssl_certs_group }}"
      mode: "0644"
    when: s3_ssl_certs_certdata.full_chain is defined
